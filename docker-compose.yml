services:
  # ms-tracking-manager:
  #   image: ms-tracking-manager
  #   container_name: ms-tracking-manager
  #   build:
  #     context: ./ms.tracking-manager
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4000:4000"
  #   networks:
  #     - smartnetwork
  #   volumes:
  #     - ./ms.tracking-manager:/usr/app/ms-tracking-manager
  #   depends_on:
  #     - apm

  # ms-carriers:
  #   image: ms-carriers
  #   container_name: ms-carriers
  #   build:
  #     context: ./ms.carriers
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4001:4001"
  #   networks:
  #     - smartnetwork
  #   volumes:
  #     - ./ms.carriers:/usr/app/ms-carriers
  #   depends_on:
  #     - apm

  # web-tracking-view:
  #   image: web-tracking-view
  #   container_name: web-tracking-view
  #   build:
  #     context: ./web.tracking-view
  #     dockerfile: Dockerfile
  #   ports:
  #     - "4002:4002"
  #   networks:
  #     - smartnetwork
  #   volumes:
  #     - ./web.tracking-view:/usr/app/web-tracking-view
  #   depends_on:
  #     - ms-tracking-manager

  broker:
    image: confluentinc/confluent-local:7.4.1
    hostname: broker
    container_name: broker
    ports:
      - "8082:8082"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: smartenvios
      MONGO_INITDB_ROOT_PASSWORD: SmartEnvios!2025

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch

  apm:
    image: docker.elastic.co/apm/apm-server-oss:7.13.0
    container_name: apm
    volumes:
      - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - "8200:8200"
    restart: on-failure
    depends_on:
      - kibana